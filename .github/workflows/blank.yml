# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '14.18.3'

      # Runs a set of commands using the runners shell
      - name: Install Dependencies
        run: npm install
        
      - name: Npm Build
        run: npm run build
        
      - name: Compress
        run: tar -zcvf release.tgz .output
        # 发布 Release

      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false


      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
         GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: ./release.tgz
         asset_name: release.tgz
         asset_content_type: application/x-tgz

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/project/protable
            rm -rf *
            wget https://hub.xn--p8jhe.tw/helson-lin/proTable.git -O release.tgz --no-check-certificate
            tar zxvf release.tgz
            pm2 delete protable
            pm2 start .output/server/index.mjs --name protable
